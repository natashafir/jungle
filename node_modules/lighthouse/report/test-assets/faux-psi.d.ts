/**
 * @param {any} lhr
 * @param {Element} container
 */
declare function renderLHReport(lhr: any, container: Element): Promise<void>;
/**
 * @param {LH.Locale} locale
 */
declare function swapLhrLocale(locale: LH.Locale): Promise<void>;
/**
 * Tweak the LHR to make the desktop and mobile reports easier to identify.
 * Adjusted: Perf category name and score, and emoji placed on top of key screenshots.
 * @param {LH.Result} lhr
 * @param {string} tabId
 */
declare function distinguishLHR(lhr: LH.Result, tabId: string): Promise<void>;
/**
 * Add ðŸ“± and ðŸ’» emoji on top of screenshot
 * @param {string} datauri
 * @param {string} tabId
 */
declare function decorateScreenshot(datauri: string, tabId: string): Promise<string>;
type lighthouseRenderer = typeof import("../clients/bundle.js");
/**
 * @license Copyright 2021 The Lighthouse Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 */
/** @fileoverview This file exercises two LH reports within the same DOM. */
/** @typedef {import('../clients/bundle.js')} lighthouseRenderer */
/** @type {lighthouseRenderer} */
declare const lighthouseRenderer: lighthouseRenderer;
declare function wait(ms?: number): Promise<any>;
//# sourceMappingURL=faux-psi.d.ts.map